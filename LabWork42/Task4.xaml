<Grid>
    <Grid.ColumnDefinitions>
        <ColumnDefinition Width="150"/>
        <ColumnDefinition Width="*"/>
    </Grid.ColumnDefinitions>
    <ListBox Name="MediaList" SelectionChanged="MediaList_SelectionChanged" Grid.Column="0"/>
    <StackPanel Grid.Column="1">
        <MediaElement Name="Player" Height="300" LoadedBehavior="Manual" 
          UnloadedBehavior="Manual"/>
        <TextBlock Name="TimeLabel"/>
        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
            <Button Content="Открыть" Click="OpenFiles_Click"/>
            <Button Content="Пуск" Click="Play_Click"/>
            <Button Content="Пауза" Click="Pause_Click"/>
            <Button Content="Стоп" Click="Stop_Click"/>
        </StackPanel>
    </StackPanel>
</Grid>

# CS
/*public partial class Task4 : Window
{
    private List<string> filePaths = new();
    private DispatcherTimer timer = new();

    public Task4()
    {
        InitializeComponent();
        timer.Interval = TimeSpan.FromSeconds(1);
        timer.Tick += Timer_Tick;
    }
    private void Timer_Tick(object sender, EventArgs e)
    {
        TimeLabel.Text = $"{Player.Position:hh\\:mm\\:ss} / {Player.NaturalDuration.TimeSpan:hh\\:mm\\:ss}";
    }

    private void OpenFiles_Click(object sender, RoutedEventArgs e)
    {
        var dialog = new OpenFileDialog
        {
            Filter = "Media Files|*.mp4;*.mp3;*.avi;*.wmv;*.wav",
            Multiselect = true
        };
        if (dialog.ShowDialog() == true)
        {
            filePaths.Clear();
            MediaList.Items.Clear();
            foreach (var file in dialog.FileNames)
            {
                filePaths.Add(file);
                MediaList.Items.Add(System.IO.Path.GetFileName(file));
            }
        }
    }

    private void MediaList_SelectionChanged(object sender, SelectionChangedEventArgs e)
    {
        if (MediaList.SelectedIndex >= 0)
        {
            Player.Source = new Uri(filePaths[MediaList.SelectedIndex]);
            Player.Play();
            timer.Start();
        }
    }

    private void Play_Click(object sender, RoutedEventArgs e)
        => Player.Play();

    private void Pause_Click(object sender, RoutedEventArgs e)
        => Player.Pause();

    private void Stop_Click(object sender, RoutedEventArgs e)
        => Player.Stop();
}*/
